class OperatorsDemo {
    public static void main(String[] args) {
        int a = 10, b = 5;

        // 1. Arithmetic Operators
        System.out.println("Arithmetic Operators:");
        System.out.println("a + b = " + (a + b));
        System.out.println("a - b = " + (a - b));
        System.out.println("a * b = " + (a * b));
        System.out.println("a / b = " + (a / b));
        System.out.println("a % b = " + (a % b));

        // 2. Relational Operators
        System.out.println("\nRelational Operators:");
        System.out.println("a == b: " + (a == b));
        System.out.println("a != b: " + (a != b));
        System.out.println("a > b: " + (a > b));
        System.out.println("a < b: " + (a < b));
        System.out.println("a >= b: " + (a >= b));
        System.out.println("a <= b: " + (a <= b));

        // 3. Logical Operators
        System.out.println("\nLogical Operators:");
        boolean x = true, y = false;
        System.out.println("x && y: " + (x && y));
        System.out.println("x || y: " + (x || y));
        System.out.println("!x: " + (!x));

        // 4. Assignment Operators
        System.out.println("\nAssignment Operators:");
        int c = a;
        System.out.println("c = " + c);
        c += b;
        System.out.println("c += b: " + c);
        c -= b;
        System.out.println("c -= b: " + c);
        c *= b;
        System.out.println("c *= b: " + c);
        c /= b;
        System.out.println("c /= b: " + c);

        // 5. Unary Operators
        System.out.println("\nUnary Operators:");
        int d = +a;
        int e = -b;
        System.out.println("+a = " + d);
        System.out.println("-b = " + e);
        System.out.println("++a = " + (++a));
        System.out.println("--b = " + (--b));

        // 6. Bitwise Operators
        System.out.println("\nBitwise Operators:");
        int p = 6, q = 3; // binary: 6=110, 3=011
        System.out.println("p & q = " + (p & q));   
        System.out.println("p | q = " + (p | q));  
        System.out.println("p ^ q = " + (p ^ q));  
        System.out.println("~p = " + (~p));       
        System.out.println("p << 1 = " + (p << 1));
        System.out.println("p >> 1 = " + (p >> 1));
    }
}
